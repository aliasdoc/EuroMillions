<?php

namespace AA\EuromilhoesBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * DrawRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DrawRepository extends EntityRepository
{
    /**
     * Gets the latest draw date store on the database
     *
     * @author Artur Alves <artur.ze.alves@gmail.com>
     *
     * @return string The latest available draw date
     */
    public function getLatestDraw()
    {
        $qb = $this->createQueryBuilder('d')
            ->orderBy('d.date', 'DESC')
            ->setMaxResults(1);

        $query = $qb->getQuery();

        return $query->getSingleResult();
    }

    /**
     * Gets all draw dates since a certain date until today
     *
     * @author Artur Alves <artur.ze.alves@gmail.com>
     *
     * @param  string $date The starting date
     *
     * @return array An array with the following draw dates since the starting date.
     */
    public function getDrawDatesSince($date)
    {
        $begin = new \DateTime($date);

        // Adds one day to ignore the first date, that already exists on the database
        $begin->add(new \DateInterval('P1D'));

        $end = new \DateTime('today');
        $interval = \DateInterval::createFromDateString('1 day');
        $period = new \DatePeriod($begin, $interval, $end);

        // Creates an array with all draw dates since $date until today
        $drawDates = array();
        foreach ($period as $dt) {
            $currentDate = $dt->format("Y-m-d");
            if($this->isDrawDay($currentDate)) {
                $drawDates[] = $currentDate;
            }
        }

        return $drawDates;
    }

    /**
     * Checks if there is a draw on a certain date.
     *
     * @author Artur Alves <artur.ze.alves@gmail.com>
     *
     * @param  string $date The date to check
     *
     * @return boolean TRUE if it is a draw day, FALSE otherwise
     */
    public function isDrawDay($date)
    {
        $date = date('D', strtotime($date));
        $drawDays = array("Tue", "Fri");
        if (in_array($date, $drawDays)) {
            return true;
        } else {
            return false;
        }
    }

    /**
     * Creates an instance of Draw from an array
     *
     * @author Artur Alves <artur.ze.alves@gmail.com>
     *
     * @param  array $data The data to fill the Draw object
     *
     * @return Draw|null A Draw or null in case of error
     */
    public function fromArray($data)
    {
        if (!is_array($data)) {
            return null;
        }

        if (!is_array($data['numbers']) || !is_array($data['stars'])) {
            return null;
        }

        $draw = new Draw();
        $draw->fromArray($data);
        return $draw;
    }
}
